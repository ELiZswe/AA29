// All the original content belonged to the US Army

#pragma once

#include "CoreMinimal.h"
#include "AA29/Object/Actor/Info/PlayerStatsInfo/PlayerStatsInfo.h"
#include "AA29/MyStructs.h"
#include "STS2_PlayerStatsInfo.generated.h"

/**
 * 
 */
UCLASS()
class AA29_API ASTS2_PlayerStatsInfo : public APlayerStatsInfo
{
	GENERATED_BODY()
public:
	ASTS2_PlayerStatsInfo();

	UPROPERTY()				bool bPlayerQuit;									//var bool bPlayerQuit;
	UPROPERTY()				bool bPlayerIsAlive;								//var bool bPlayerIsAlive;
	UPROPERTY()				float LastSpawnTime;								//var float LastSpawnTime;
	UPROPERTY()				float LastRoleChangeTime;							//var float LastRoleChangeTime;
	UPROPERTY()				EPlayerRole PlayerRole;								//var EPlayerRole PlayerRole;
	UPROPERTY()				float LastLinkChangeTime;							//var float LastLinkChangeTime;
	UPROPERTY()				ELinkedState LinkedState;							//var ELinkedState LinkedState;
	UPROPERTY()				FString iESSROECivilianKillByES2MapLocation;		//var string iESSROECivilianKillByES2MapLocation;
	UPROPERTY()				FString iESSROECivilianKillByPlayerMapLocation;		//var string iESSROECivilianKillByPlayerMapLocation;
	UPROPERTY()				FString iESSROECivilianHitMapLocation;				//var string iESSROECivilianHitMapLocation;
	UPROPERTY()				int32 iESSROECivilianDeathsByIED;					//var int iESSROECivilianDeathsByIED;
	UPROPERTY()				int32 iESSROECivilianDeaths;						//var int iESSROECivilianDeaths;
	UPROPERTY()				int32 iESSROECivilianHits;							//var int iESSROECivilianHits;
	UPROPERTY()				FString iESSROEFriendlyFireDeathLocation;			//var string iESSROEFriendlyFireDeathLocation;
	UPROPERTY()				FString iESSROEFriendlyFireHitLocation;				//var string iESSROEFriendlyFireHitLocation;
	UPROPERTY()				int32 iESSROEFriendlyFireDeaths;					//var int iESSROEFriendlyFireDeaths;
	UPROPERTY()				int32 iESSROEFriendlyFireHits;						//var int iESSROEFriendlyFireHits;
	UPROPERTY()				FString iESSPlayerInjuryLocation;					//var string iESSPlayerInjuryLocation;
	UPROPERTY()				int32 iESSPlayerTotalInjuriesByObject;				//var int iESSPlayerTotalInjuriesByObject;
	UPROPERTY()				int32 iESSPlayerTotalInjuriesFriendlyFire;			//var int iESSPlayerTotalInjuriesFriendlyFire;
	UPROPERTY()				int32 iESSPlayerTotalInjuriesByAI;					//var int iESSPlayerTotalInjuriesByAI;
	UPROPERTY()				TArray<FVector> InjuryLocations;					//var array<Vector> InjuryLocations;
	UPROPERTY()				int32 iESSPlayerTotalInjuries;						//var int iESSPlayerTotalInjuries;
	UPROPERTY()				FString iESSPlayerDeathLocation;					//var string iESSPlayerDeathLocation;
	UPROPERTY()				int32 iESSPlayerTotalDeathsByObject;				//var int iESSPlayerTotalDeathsByObject;
	UPROPERTY()				int32 iESSPlayerTotalDeathsByFriendlyFire;			//var int iESSPlayerTotalDeathsByFriendlyFire;
	UPROPERTY()				int32 iESSPlayerTotalDeathsByAI;					//var int iESSPlayerTotalDeathsByAI;
	UPROPERTY()				FString iESSCombatSurvivingAILocation;				//var string iESSCombatSurvivingAILocation;
	UPROPERTY()				int32 iESSCombatSurvivingAI;						//var int iESSCombatSurvivingAI;
	UPROPERTY()				FString iESSCombatAIKill;							//var string iESSCombatAIKill;
	UPROPERTY()				int32 iESSCombatEnemyContactTime;					//var int iESSCombatEnemyContactTime;
	UPROPERTY()				int32 iESSCombatDamageCount;						//var int iESSCombatDamageCount;
	UPROPERTY()				int32 iESSCombatTotalDamageRange;					//var int iESSCombatTotalDamageRange;
	UPROPERTY()				int32 iESSCombatTotalDamage;						//var int iESSCombatTotalDamage;
	UPROPERTY()				int32 iESSCombatHeadshots;							//var int iESSCombatHeadshots;
	UPROPERTY()				FString iESSObjectDistribution;						//var string iESSObjectDistribution;
	UPROPERTY()				int32 iESSObjectUnnecessaryUse;						//var int iESSObjectUnnecessaryUse;
	UPROPERTY()				int32 iESSObjectReportingErrors;					//var int iESSObjectReportingErrors;
	UPROPERTY()				FString iESSObjectUnreportedLocations;				//var string iESSObjectUnreportedLocations;
	UPROPERTY()				int32 iESSObjectReportableNonLethal;				//var int iESSObjectReportableNonLethal;
	UPROPERTY()				int32 iESSObjectReportableLethal;					//var int iESSObjectReportableLethal;
	UPROPERTY()				int32 iESSObjectReportedNonLethal;					//var int iESSObjectReportedNonLethal;
	UPROPERTY()				int32 iESSObjectReportedLethal;						//var int iESSObjectReportedLethal;
	UPROPERTY()				int32 iESSMissionSurvivingPlayers;					//var int iESSMissionSurvivingPlayers;
	UPROPERTY()				int32 iESSMissionTotalPlayers;						//var int iESSMissionTotalPlayers;
	UPROPERTY()				int32 iESSMissionProgressTime;						//var int iESSMissionProgressTime;
	UPROPERTY()				int32 iESSMissionSuccessTime;						//var int iESSMissionSuccessTime;
	UPROPERTY()				int32 iESSMissionFailureTime;						//var int iESSMissionFailureTime;
	UPROPERTY()				int32 iESSNoRadioLinkedObjectTaken;					//var int iESSNoRadioLinkedObjectTaken;
	UPROPERTY()				int32 iESSPostRadioLinkedObjectTaken;				//var int iESSPostRadioLinkedObjectTaken;
	UPROPERTY()				int32 iESSNoRadioExaminedObject;					//var int iESSNoRadioExaminedObject;
	UPROPERTY()				int32 iESSPostRadioExaminedObject;					//var int iESSPostRadioExaminedObject;
	UPROPERTY()				int32 iESSObjectDiscoveryRadioed;					//var int iESSObjectDiscoveryRadioed;
	UPROPERTY()				int32 iESSObjectExaminedByOtherPlayer;				//var int iESSObjectExaminedByOtherPlayer;
	UPROPERTY()				TArray<FVector> iESSObjectDiscoveredLocations;		//var array<Vector> iESSObjectDiscoveredLocations;
	UPROPERTY()				int32 iESSObjectDiscovered;							//var int iESSObjectDiscovered;
	UPROPERTY()				int32 iESSObjectAvailable;							//var int iESSObjectAvailable;
	UPROPERTY()				int32 KillsSprRifle;								//var int KillsSprRifle;
	UPROPERTY()				int32 KillsRocket;									//var int KillsRocket;
	UPROPERTY()				int32 KillsMG;										//var int KillsMG;
	UPROPERTY()				int32 KillsPistol;									//var int KillsPistol;
	UPROPERTY()				int32 KillsAstRifle;								//var int KillsAstRifle;
	UPROPERTY()				int32 KillsGrenade;									//var int KillsGrenade;
	UPROPERTY()				int32 HitsSprRifle;									//var int HitsSprRifle;
	UPROPERTY()				int32 HitsRocket;									//var int HitsRocket;
	UPROPERTY()				int32 HitsMG;										//var int HitsMG;
	UPROPERTY()				int32 HitsPistol;									//var int HitsPistol;
	UPROPERTY()				int32 HitsAstRifle;									//var int HitsAstRifle;
	UPROPERTY()				int32 HitsGrenade;									//var int HitsGrenade;
	UPROPERTY()				int32 ShotsFiredSprRifle;							//var int ShotsFiredSprRifle;
	UPROPERTY()				int32 ShotsFiredRocket;								//var int ShotsFiredRocket;
	UPROPERTY()				int32 ShotsFiredMG;									//var int ShotsFiredMG;
	UPROPERTY()				int32 ShotsFiredPistol;								//var int ShotsFiredPistol;
	UPROPERTY()				int32 ShotsFiredAstRifle;							//var int ShotsFiredAstRifle;
	UPROPERTY()				int32 ShotsFiredGrenade;							//var int ShotsFiredGrenade;
	UPROPERTY()				int32 PBKicked;										//var int PBKicked;
	UPROPERTY()				int32 AdminKicked;									//var int AdminKicked;
	UPROPERTY()				int32 ObjectiveDeaths;								//var int ObjectiveDeaths;
	UPROPERTY()				int32 CapturedObjective;							//var int CapturedObjective;
	UPROPERTY()				int32 ROE;											//var int ROE;
	UPROPERTY()				int32 Score;										//var int Score;
	UPROPERTY()				int32 MedPaksUsed;									//var int MedPaksUsed;
	UPROPERTY()				int32 Healed;										//var int Healed;
	UPROPERTY()				int32 UsedMedic;									//var int UsedMedic;
	UPROPERTY()				int32 SecondsLinkedToSoldiers;						//var int SecondsLinkedToSoldiers;
	UPROPERTY()				int32 SecondsLinkedToFTL;							//var int SecondsLinkedToFTL;
	UPROPERTY()				int32 SecondsLinkedToSQL;							//var int SecondsLinkedToSQL;
	UPROPERTY()				TArray<FVector> DeathLocations;						//var array<Vector> DeathLocations;
	UPROPERTY()				int32 Deaths;										//var int Deaths;
	UPROPERTY()				int32 Kills;										//var int Kills;
	UPROPERTY()				int32 SecondsAsSoldier;								//var int SecondsAsSoldier;
	UPROPERTY()				int32 SecondsAsFTL;									//var int SecondsAsFTL;
	UPROPERTY()				int32 SecondsAsSQL;									//var int SecondsAsSQL;
	UPROPERTY()				int32 RoundsSurvivedLost;							//var int RoundsSurvivedLost;
	UPROPERTY()				int32 RoundsSurvivedWon;							//var int RoundsSurvivedWon;
	UPROPERTY()				int32 RoundsLost;									//var int RoundsLost;
	UPROPERTY()				int32 RoundsWon;									//var int RoundsWon;
	UPROPERTY()				int32 RoundsStarted;								//var int RoundsStarted;
	UPROPERTY()				int32 TimeAlive;									//var int TimeAlive;
	UPROPERTY()				int32 TimePlayed;									//var int TimePlayed;
	UPROPERTY()				int32 Quit;											//var int Quit;
	UPROPERTY()				bool bRoundHasEnded;								//var bool bRoundHasEnded;



	int32 QueryCapturedObjectives();
	int32 QueryCapturedObjectiveDeaths();
	int32 QueryHealed();
	int32 QueryUsedMedic();
	int32 QueryMedPacksUsed();
	int32 QueryTimePlayedSeconds();
	int32 QueryTimeAliveSeconds();
	int32 QueryRoundStarted();
	int32 QueryRoundsSurvivedWon();
	int32 QueryRoundsSurvivedLost();
	int32 QueryShotsFiredMachineGun();
	int32 QueryShotsFiredAssaultRifle();
	int32 QueryShotsFiredPistol();
	int32 QueryShotsFiredGrenade();
	int32 QueryShotsFiredSniper();
	int32 QueryShotsFiredRocket();
	int32 QueryShotsHitMachineGun();
	int32 QueryShotsHitAssaultRifle();
	int32 QueryShotsHitPistol();
	int32 QueryShotsHitGrenade();
	int32 QueryShotsHitSniper();
	int32 QueryShotsHitRocket();
	int32 QueryESSObjectAvailable();
	int32 QueryESSObjectDiscovered();
	int32 QueryESSObjectExaminedByOtherPlayer();
	int32 QueryESSObjectDiscoveryRadioed();
	int32 QueryESSPostRadioExaminedObject();
	int32 QueryESSNoRadioExaminedObject();
	int32 QueryESSPostRadioLinkedObjectTaken();
	int32 QueryESSNoRadioLinkedObjectTaken();
	void StatEvent_ScoreChange(int DeltaScore);
	void StatEvent_ROEChange(int32 DeltaROE);
	void StatEvent_Kill();
	void StatEvent_Death(FVector KilledLocation);
	void StatEvent_Quit();
	void StatEvent_RoundStartedAsMedic();
	void StatEvent_WasHealed();
	void StatEvent_HealedTeammate();
	void StatEvent_RoundStarted();
	void StatEvent_RoundEnded();
	void StatEvent_RoundWon();
	void StatEvent_RoundLost();
	void StatEvent_RoundTotalPlayers(int32 TotalPlayers);
	void StatEvent_RoundPlayersSurviving(int32 PlayersSurviving);
	void ChangeLinkType(ELinkedState NewLinkedState);
	void ChangePlayerRole(EPlayerRole NewPlayerRole);
	void StatEvent_RoundStartedAsSQL();
	void StatEvent_RoundStartedAsFTL();
	void StatEvent_RoundStartedAsSoldier();
	void StatEvent_ChangedRoleToSQL();
	void StatEvent_ChangedRoleToFTL();
	void StatEvent_LinkedToSQLAndFTL();
	void StatEvent_LinkedToSQL();
	void StatEvent_LinkedToFTL();
	void StatEvent_LinkedToSoldier();
	void StatEvent_Unlinked();
	void StatEvent_KickPlayer();
	void StatEvent_KickPlayerPB();
	void StatEvent_KickPlayerAdmin();
	void StatEvent_CapturedObjective();
	void StatEvent_ObjectiveDeath();
	void StatEvent_ShotHitMachineGun();
	void StatEvent_ShotHitAssaultRifle();
	void StatEvent_ShotHitPistol();
	void StatEvent_ShotHitGrenade();
	void StatEvent_ShotHitSniperRifle();
	void StatEvent_ShotHitRocket();
	void StatEvent_ShotKilledMachineGun();
	void StatEvent_ShotKilledAssaultRifle();
	void StatEvent_ShotKilledPistol();
	void StatEvent_ShotKilledGrenade();
	void StatEvent_ShotKilledSniperRifle();
	void StatEvent_ShotKilledRocket();
	void StatEvent_ShotFiredMachineGun();
	void StatEvent_ShotFiredAssaultRifle();
	void StatEvent_ShotFiredPistol();
	void StatEvent_ShotFiredGrenade();
	void StatEvent_ShotFiredSniperRifle();
	void StatEvent_ShotFiredRocket();
	void StatEvent_ESSObjectAvailable();
	void StatEvent_ESSObjectDiscovered(FVector Location);
	void StatEvent_ESSObjectExaminedByOtherPlayer();
	void StatEvent_ESSObjectDiscoveryRadioed();
	void StatEvent_ESSPostRadioExaminedObject();
	void StatEvent_ESSNoRadioExaminedObject();
	void StatEvent_ESSPostRadioLinkedObjectTaken();
	void StatEvent_ESSNoRadioLinkedObjectTaken();
	void StatEvent_ObjectReportedLethal();
	void StatEvent_ObjectReportedNonLethal();
	void StatEvent_ObjectReportableLethal(int32 NumObjects);
	void StatEvent_ObjectReportableNonLethal(int32 NumObjects);
	void StatEvent_ObjectUnreportedLocations(TArray<FVector> UnreportedLocations);
	void StatEvent_ObjectReportingErrors();
	void StatEvent_ObjectUnnecessaryUse();
	void StatEvent_ReportObjectDistribution();
	void StatEvent_CombatHeadshots();
	void StatEvent_CombatTotalDamage(int NewDamage);
	void StatEvent_CombatDamageCount();
	void StatEvent_CombatEnemyContactTime(float Seconds);
	void StatEvent_CombatSurvivingAI(int NumAIs);
	void StatEvent_PlayerTotalDeathsByAI();
	void StatEvent_PlayerTotalDeathsByFriendlyFire();
	void StatEvent_PlayerTotalDeathsByObject();
	void StatEvent_ReportPlayerDeathLocations();
	void StatEvent_PlayerTotalInjuries(FVector InjuryLocation);
	void StatEvent_PlayerTotalInjuriesByAI(FVector InjuryLocation);
	void StatEvent_PlayerTotalInjuriesByFriendlyFire(FVector InjuryLocation);
	void StatEvent_PlayerTotalInjuriesByObject(FVector InjuryLocation);
	void StatEvent_ReportPlayerInjuryLocations();
	void StatEvent_ROEFriendlyFireHits();
	void StatEvent_ROEFriendlyFireDeaths();
	void StatEvent_ROECivilianHits();
	void StatEvent_ROECivilianDeaths();
	void StatEvent_ROECivilianDeathsByIED();
	void IgnoreStatsThisRound();

};
