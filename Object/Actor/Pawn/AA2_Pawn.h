// All the original content belonged to the US Army

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Pawn.h"
#include "AA29/AA29.h"
#include "AA2_Pawn.generated.h"

class UKarmaParamsCollision;
class AEventlab;
class AAnimManager;
class AVehicle;
class ANavigationPoint;
class AWeapon;
class APowerups;
class UaDamageType;
class AProjector;
class AaAIController;
class AAA2_PlayerState;
class ALadderVolume;
class APlayerStart;
class AAuxCollisionCylinder;
class AShadowProjector;
class AItemAttachment;
class AInvContainer;
class AInventoryAttachment;

UCLASS(Config = Game)
class AAA2_Pawn : public APawn
{
	GENERATED_BODY()

public:
	// Sets default values for this pawn's properties
	AAA2_Pawn();

	UPROPERTY()												AController*					TempController;				//var AController* TempController;
	UPROPERTY()												float							NetRelevancyTime;			//var float NetRelevancyTime;
	UPROPERTY()												APlayerController*				LastRealViewer;				//var APlayerController* LastRealViewer;
	UPROPERTY()												AActor*							LastViewer;					//var AActor* LastViewer;
	UPROPERTY()												float							LastLocTime;				//var const float LastLocTime;
	UPROPERTY()												bool							bJustLanded;				//var bool bJustLanded;
	UPROPERTY()												bool							bLandRecovery;				//var bool bLandRecovery;
	UPROPERTY()												bool							bUpAndOut;					//var bool bUpAndOut;
	UPROPERTY(Replicated)												bool							bIsWalking;					//var bool bIsWalking;
	UPROPERTY()												bool							bWarping;					//var bool bWarping;
	UPROPERTY()												bool							bWantsToCrouch;				//var bool bWantsToCrouch;
	UPROPERTY()												bool							bIsCrouched;				//var const bool bIsCrouched;
	UPROPERTY()												bool							bTryToUncrouch;				//var const bool bTryToUncrouch;
	UPROPERTY(EditAnywhere)									bool							bCanCrouch;					//var() bool bCanCrouch;
	UPROPERTY()												bool							bCrawler;					//var bool bCrawler;
	UPROPERTY()												bool							bReducedSpeed;				//var const bool bReducedSpeed;
	UPROPERTY()												bool							bJumpCapable;				//var bool bJumpCapable;
	UPROPERTY()												bool							bCanJump;					//var bool bCanJump;
	UPROPERTY()												bool							bAbortMoveIfGoalOccupied;	//var bool bAbortMoveIfGoalOccupied;
	UPROPERTY()												bool							bCanWalk;					//var bool bCanWalk;
	UPROPERTY()												bool							bCanSwim;					//var bool bCanSwim;
	UPROPERTY()												bool							bCanFly;					//var bool bCanFly;
	UPROPERTY()												bool							bCanClimbLadders;			//var bool bCanClimbLadders;
	UPROPERTY()												bool							bCanStrafe;					//var bool bCanStrafe;
	UPROPERTY()												bool							bCanDoubleJump;				//var bool bCanDoubleJump;
	UPROPERTY()												bool							bCanWallDodge;				//var bool bCanWallDodge;
	UPROPERTY()												bool							bAvoidLedges;				//var bool bAvoidLedges;
	UPROPERTY()												bool							bStopAtLedges;				//var bool bStopAtLedges;
	UPROPERTY()												bool							bNoJumpAdjust;				//var bool bNoJumpAdjust;
	UPROPERTY()												bool							bCountJumps;				//var bool bCountJumps;
	UPROPERTY()												bool							bSimulateGravity;			//var const bool bSimulateGravity;
	UPROPERTY()												bool							bUpdateEyeheight;			//var bool bUpdateEyeheight;
	UPROPERTY()												bool							bIgnoreForces;				//var bool bIgnoreForces;
	UPROPERTY()												bool							bNoVelocityUpdate;			//var const bool bNoVelocityUpdate;
	UPROPERTY()												bool							bCanWalkOffLedges;			//var bool bCanWalkOffLedges;
	UPROPERTY()												bool							bSteadyFiring;				//var bool bSteadyFiring;
	UPROPERTY()												bool							bCanBeBaseForPawns;			//var bool bCanBeBaseForPawns;
	UPROPERTY()												bool							bClientCollision;			//var bool bClientCollision;
	UPROPERTY()												bool							bSimGravityDisabled;		//var const bool bSimGravityDisabled;
	UPROPERTY()												bool							bDirectHitWall;				//var bool bDirectHitWall;
	UPROPERTY()												bool							bServerMoveSetPawnRot;		//var bool bServerMoveSetPawnRot;
	UPROPERTY()												bool							bFlyingKarma;				//var bool bFlyingKarma;
	UPROPERTY()												bool							bDrawCorona;				//var bool bDrawCorona;
	UPROPERTY(globalconfig)									bool							bNoCoronas;					//var globalconfig bool bNoCoronas;
	UPROPERTY()												bool							bThumped;					//var bool bThumped;
	UPROPERTY()												bool							bInvulnerableBody;			//var bool bInvulnerableBody;
	UPROPERTY()												bool							bIsFemale;					//var bool bIsFemale;
	UPROPERTY()												bool							bAutoActivate;				//var bool bAutoActivate;
	UPROPERTY()												bool							bCanPickupInventory;		//var bool bCanPickupInventory;
	UPROPERTY()												bool							bUpdatingDisplay;			//var bool bUpdatingDisplay;
	UPROPERTY()												bool							bAmbientCreature;			//var bool bAmbientCreature;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bLOSHearing;				//var(AI) bool bLOSHearing;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bSameZoneHearing;			//var(AI) bool bSameZoneHearing;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bAdjacentZoneHearing;		//var(AI) bool bAdjacentZoneHearing;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bMuffledHearing;			//var(AI) bool bMuffledHearing;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bAroundCornerHearing;		//var(AI) bool bAroundCornerHearing;
	UPROPERTY(EditAnywhere, Category = "AI")				bool							bDontPossess;				//var(AI) bool bDontPossess;
	UPROPERTY()												bool							bAutoFire;					//var bool bAutoFire;
	UPROPERTY()												bool							bRollToDesired;				//var bool bRollToDesired;
	UPROPERTY()												bool							bIgnorePlayFiring;			//var bool bIgnorePlayFiring;
	UPROPERTY()												bool							bStationary;				//var bool bStationary;
	UPROPERTY()												bool							bCachedRelevant;			//var bool bCachedRelevant;
	UPROPERTY()												bool							bUseCompressedPosition;		//var bool bUseCompressedPosition;
	UPROPERTY(globalconfig)									bool							bWeaponBob;					//var globalconfig bool bWeaponBob;
	UPROPERTY()												bool							bHideRegularHUD;			//var bool bHideRegularHUD;
	UPROPERTY()												bool							bSpecialHUD;				//var bool bSpecialHUD;
	UPROPERTY()												bool							bSpecialCrosshair;			//var bool bSpecialCrosshair;
	UPROPERTY()												bool							bSpecialCalcView;			//var bool bSpecialCalcView;
	UPROPERTY()												bool							bNoTeamBeacon;				//var bool bNoTeamBeacon;
	UPROPERTY()												bool							bNoWeaponFiring;			//var bool bNoWeaponFiring;
	UPROPERTY()												bool							bIsTyping;					//var bool bIsTyping;
	UPROPERTY()												bool							bScriptPostRender;			//var bool bScriptPostRender;
	UPROPERTY()												bool							bCanUse;					//var bool bCanUse;
	UPROPERTY()												bool							bSuperSize;					//var bool bSuperSize;
	UPROPERTY()												uint8							FlashCount;					//var uint8 FlashCount;
	UPROPERTY()												uint8							Visibility;					//var uint8 Visibility;
	UPROPERTY()												float							DesiredSpeed;				//var float DesiredSpeed;
	UPROPERTY()												float							MaxDesiredSpeed;			//var float MaxDesiredSpeed;
	UPROPERTY(EditAnywhere, Category = "AI")				FName							AIScriptTag;				//var(AI) FName AIScriptTag;
	UPROPERTY(EditAnywhere, Category = "AI")				float							HearingThreshold;			//var(AI) float HearingThreshold;
	UPROPERTY(EditAnywhere, Category = "AI")				float							Alertness;					//var(AI) float Alertness;
	UPROPERTY(EditAnywhere, Category = "AI")				float							SightRadius;				//var(AI) float SightRadius;
	UPROPERTY(EditAnywhere, Category = "AI")				float							PeripheralVision;			//var(AI) float PeripheralVision;
	UPROPERTY()												bool							bIgnoresFog;				//var bool bIgnoresFog;
	UPROPERTY()												bool							bSeesThroughDecomeshes;		//var(AI) bool bSeesThroughDecomeshes;
	UPROPERTY(EditAnywhere)									float							SkillModifier;				//var() float SkillModifier;
	UPROPERTY()												float							AvgPhysicsTime;				//var const float AvgPhysicsTime;
	UPROPERTY()												float							MeleeRange;					//var float MeleeRange;
	UPROPERTY()												float							NavigationPointRange;		//var float NavigationPointRange;
	UPROPERTY()												ANavigationPoint*				Anchor;						//var ANavigationPoint* Anchor;
	UPROPERTY()												ANavigationPoint*				LastAnchor;					//var const ANavigationPoint* LastAnchor;
	UPROPERTY()												float							FindAnchorFailedTime;		//var float FindAnchorFailedTime;
	UPROPERTY()												float							LastValidAnchorTime;		//var float LastValidAnchorTime;
	UPROPERTY()												float							DestinationOffset;			//var float DestinationOffset;
	UPROPERTY()												float							NextPathRadius;				//var float NextPathRadius;
	UPROPERTY()												FVector							SerpentineDir;				//var Vector SerpentineDir;
	UPROPERTY()												float							SerpentineDist;				//var float SerpentineDist;
	UPROPERTY()												float							SerpentineTime;				//var float SerpentineTime;
	UPROPERTY()												float							UncrouchTime;				//var const float UncrouchTime;
	UPROPERTY()												float							SpawnTime;					//var float SpawnTime;
	UPROPERTY()												float							GroundSpeed;				//var float GroundSpeed;
	UPROPERTY()												float							WaterSpeed;					//var float WaterSpeed;
	UPROPERTY()												float							AirSpeed;					//var float AirSpeed;
	UPROPERTY()												float							LadderSpeed;				//var float LadderSpeed;
	UPROPERTY()												float							AccelRate;					//var float AccelRate;
	UPROPERTY()												float							JumpZ;						//var float JumpZ;
	UPROPERTY()												float							AirControl;					//var float AirControl;
	UPROPERTY()												float							WalkingPct;					//var float WalkingPct;
	UPROPERTY()												float							CrouchedPct;				//var float CrouchedPct;
	UPROPERTY()												float							MaxFallSpeed;				//var float MaxFallSpeed;
	UPROPERTY()												FVector							ConstantAcceleration;		//var Vector ConstantAcceleration;
	UPROPERTY()												AVehicle*						DrivenVehicle;				//var AVehicle* DrivenVehicle;
	UPROPERTY()												FVector							ImpactVelocity;				//var Vector ImpactVelocity;
	UPROPERTY(EditAnywhere)									int32							PitchUpLimit;				//var() int32 PitchUpLimit;
	UPROPERTY(EditAnywhere)									int32							PitchDownLimit;				//var() int32 PitchDownLimit;
	UPROPERTY()												FString							OwnerName;					//var FString OwnerName;
	UPROPERTY(EditAnywhere, Replicated)						AWeapon*						Weapon;						//var travel AWeapon* Weapon;
	UPROPERTY()												AWeapon*						PendingWeapon;				//var AWeapon* PendingWeapon;
	UPROPERTY()												APowerups*						SelectedItem;				//var travel APowerups* SelectedItem;
	UPROPERTY()												float							EyeHeight;					//var float EyeHeight;
	UPROPERTY()												FVector							Floor;						//var Vector Floor;
	UPROPERTY()												float							SplashTime;					//var float SplashTime;
	UPROPERTY()												float							CrouchHeight;				//var float CrouchHeight;
	UPROPERTY()												float							CrouchRadius;				//var float CrouchRadius;
	UPROPERTY(EditAnywhere)									float							DrivingHeight;				//var() float DrivingHeight;
	UPROPERTY(EditAnywhere)									float							DrivingRadius;				//var() float DrivingRadius;
	UPROPERTY()												float							OldZ;						//var float OldZ;
	UPROPERTY()												APhysicsVolume*					HeadVolume;					//var APhysicsVolume* HeadVolume;
	UPROPERTY()												float							HealthMax;					//var float HealthMax;
	UPROPERTY()												float							SuperHealthMax;				//var float SuperHealthMax;
	UPROPERTY(EditAnywhere, Replicated)						int32							Health;						//var travel int32 Health;
	UPROPERTY()												float							BreathTime;					//var float BreathTime;
	UPROPERTY()												float							UnderWaterTime;				//var float UnderWaterTime;
	UPROPERTY()												float							LastPainTime;				//var float LastPainTime;
	UPROPERTY()												UaDamageType*					ReducedDamageType;			//var class<DamageType> ReducedDamageType;
	UPROPERTY()												float							HeadRadius;					//var float HeadRadius;
	UPROPERTY()												float							HeadHeight;					//var float HeadHeight;
	UPROPERTY()												float							HeadScale;					//var float HeadScale;
	UPROPERTY()												bool							bSetPCRotOnPossess;			//var bool bSetPCRotOnPossess;
	UPROPERTY()												FVector							noise1spot;					//var const Vector noise1spot;
	UPROPERTY()												float							noise1time;					//var const float noise1time;
	UPROPERTY()												APawn*							noise1other;				//var const APawn* noise1other;
	UPROPERTY()												float							noise1loudness;				//var const float noise1loudness;
	UPROPERTY()												FVector							noise2spot;					//var const Vector noise2spot;
	UPROPERTY()												float							noise2time;					//var const float noise2time;
	UPROPERTY()												APawn*							noise2other;				//var const APawn* noise2other;
	UPROPERTY()												float							noise2loudness;				//var const float noise2loudness;
	UPROPERTY()												float							LastPainSound;				//var float LastPainSound;
	UPROPERTY(globalconfig)									float							Bob;						//var globalconfig float Bob;
	UPROPERTY()												float							LandBob;					//var float LandBob;
	UPROPERTY()												float							AppliedBob;					//var float AppliedBob;
	UPROPERTY()												float							bobtime;					//var float bobtime;
	UPROPERTY()												FVector							WalkBob;					//var Vector WalkBob;
	UPROPERTY()												float							SoundDampening;				//var float SoundDampening;
	UPROPERTY()												float							DamageScaling;				//var float DamageScaling;
	UPROPERTY(globalconfig)									float							AmbientSoundScaling;		//var globalconfig float AmbientSoundScaling;
	UPROPERTY()												FString							MenuName;					//var localized FString MenuName;
	UPROPERTY()												AProjector*						Shadow;						//var AProjector* Shadow;
	UPROPERTY()												AaAIController*					ControllerClass;			//var class<AIController> ControllerClass;
	UPROPERTY()												AAA2_PlayerState*				PlayerReplicationInfo;		//var AAA2_PlayerState* PlayerReplicationInfo;
	UPROPERTY()												ALadderVolume*					OnLadder;					//var ALadderVolume* OnLadder;
	UPROPERTY()												FName							LandMovementState;			//var FName LandMovementState;
	UPROPERTY()												FName							WaterMovementState;			//var FName WaterMovementState;
	UPROPERTY()												APlayerStart*					LastStartSpot;				//var APlayerStart* LastStartSpot;
	UPROPERTY()												float							LastStartTime;				//var float LastStartTime;
	UPROPERTY()												FName							AnimAction;					//var FName AnimAction;
	UPROPERTY()												FName							AnimLoopAction;				//var FName AnimLoopAction;
	UPROPERTY()												bool							bForceAnimUpdate;			//var bool bForceAnimUpdate;
	UPROPERTY()												AAnimManager*					AnimManager;				//var AAnimManager* AnimManager;
	UPROPERTY()												FVector							TakeHitLocation;			//var Vector TakeHitLocation;
	UPROPERTY()												UaDamageType*					DesiHitDamageTyperedSpeed;	//var class<DamageType> HitDamageType;
	UPROPERTY()												FVector							TearOffMomentum;			//var Vector TearOffMomentum;
	UPROPERTY()												EPhysics						OldPhysics;					//var Actor.EPhysics OldPhysics;
	UPROPERTY()												bool							bPhysicsAnimUpdate;			//var bool bPhysicsAnimUpdate;
	UPROPERTY()												bool							bWasCrouched;				//var bool bWasCrouched;
	UPROPERTY()												bool							bWasWalking;				//var bool bWasWalking;
	UPROPERTY()												bool							bWasOnGround;				//var bool bWasOnGround;
	UPROPERTY()												bool							bInitializeAnimation;		//var bool bInitializeAnimation;
	UPROPERTY()												bool							bPlayedDeath;				//var bool bPlayedDeath;
	UPROPERTY()												bool							bIsIdle;					//var bool bIsIdle;
	UPROPERTY()												bool							bWaitForAnim;				//var bool bWaitForAnim;
	UPROPERTY()												bool							bReverseRun;				//var const bool bReverseRun;
	UPROPERTY()												bool							bDoTorsoTwist;				//var bool bDoTorsoTwist;
	UPROPERTY()												bool							FootTurning;				//var const bool FootTurning;
	UPROPERTY()												bool							FootStill;					//var const bool FootStill;
	UPROPERTY()												uint8							ViewPitch;					//var const uint8 ViewPitch;
	UPROPERTY()												int32							SmoothViewPitch;			//var int32 SmoothViewPitch;
	UPROPERTY()												int32							SmoothViewYaw;				//var int32 SmoothViewYaw;
	UPROPERTY()												float							OldRotYaw;					//var float OldRotYaw;
	UPROPERTY()												FVector							OldAcceleration;			//var Vector OldAcceleration;
	UPROPERTY()												TArray<FName>					MovementAnims;				//var FName MovementAnims[4];
	UPROPERTY()												FName							TurnLeftAnim;				//var FName TurnLeftAnim;
	UPROPERTY()												FName							TurnRightAnim;				//var FName TurnRightAnim;
	UPROPERTY(EditAnywhere, Category = "AnimTweaks")		float							BlendChangeTime;			//var(AnimTweaks) float BlendChangeTime;
	UPROPERTY()												float							MovementBlendStartTime;		//var float MovementBlendStartTime;
	UPROPERTY()												float							ForwardStrafeBias;			//var float ForwardStrafeBias;
	UPROPERTY()												float							BackwardStrafeBias;			//var float BackwardStrafeBias;
	UPROPERTY()												float							DodgeSpeedFactor;			//var float DodgeSpeedFactor;
	UPROPERTY()												float							DodgeSpeedZ;				//var float DodgeSpeedZ;
	UPROPERTY()												int32							OldAnimDir;					//var const int32 OldAnimDir;
	UPROPERTY()												FVector							OldVelocity;				//var const Vector OldVelocity;
	UPROPERTY()												float							IdleTime;					//var float IdleTime;
	UPROPERTY()												TArray<FName>					SwimAnims;					//var FName SwimAnims[4];
	UPROPERTY()												TArray<FName>					CrouchAnims;				//var FName CrouchAnims[4];
	UPROPERTY()												TArray<FName>					WalkAnims;					//var FName WalkAnims[4];
	UPROPERTY()												TArray<FName>					AirAnims;					//var FName AirAnims[4];
	UPROPERTY()												TArray<FName>					TakeoffAnims;				//var FName TakeoffAnims[4];
	UPROPERTY()												TArray<FName>					LandAnims;					//var FName LandAnims[4];
	UPROPERTY()												TArray<FName>					DoubleJumpAnims;			//var FName DoubleJumpAnims[4];
	UPROPERTY()												TArray<FName>					DodgeAnims;					//var FName DodgeAnims[4];
	UPROPERTY()												FName							AirStillAnim;				//var FName AirStillAnim;
	UPROPERTY()												FName							TakeoffStillAnim;			//var FName TakeoffStillAnim;
	UPROPERTY()												FName							CrouchTurnRightAnim;		//var FName CrouchTurnRightAnim;
	UPROPERTY()												FName							CrouchTurnLeftAnim;			//var FName CrouchTurnLeftAnim;
	UPROPERTY()												FName							IdleCrouchAnim;				//var FName IdleCrouchAnim;
	UPROPERTY()												FName							IdleSwimAnim;				//var FName IdleSwimAnim;
	UPROPERTY()												FName							IdleWeaponAnim;				//var FName IdleWeaponAnim;
	UPROPERTY()												FName							IdleRestAnim;				//var FName IdleRestAnim;
	UPROPERTY()												FName							IdleChatAnim;				//var FName IdleChatAnim;
	UPROPERTY()												TArray<FName>					TauntAnims;					//var TArray<FName> TauntAnims;
	UPROPERTY()												TArray<FString>					TauntAnimNames;				//var localized FString TauntAnimNames[16];
	UPROPERTY()												int32							FootRot;					//var const int32 FootRot;
	UPROPERTY()												int32							TurnDir;					//var const int32 TurnDir;
	UPROPERTY()												FName							RootBone;					//var FName RootBone;
	UPROPERTY()												FName							HeadBone;					//var FName HeadBone;
	UPROPERTY()												FName							SpineBone1;					//var FName SpineBone1;
	UPROPERTY()												FName							SpineBone2;					//var FName SpineBone2;
	UPROPERTY(EditAnywhere, Category = "Shield")			float							ShieldStrength;				//var(Shield) transient float ShieldStrength;
	UPROPERTY(EditAnywhere)									TArray<FHitFXData>				HitFx;						//var() HitFXData HitFx[8];
	UPROPERTY()												int32							HitFxTicker;				//var transient int32 HitFxTicker;
	UPROPERTY()												FCompressedPosition				PawnPosition;				//var transient CompressedPosition PawnPosition;
	UPROPERTY()												AController*					DelayedDamageInstigatorController;				//var AController* DelayedDamageInstigatorController;
	UPROPERTY()												float							MinFlySpeed;				//var float MinFlySpeed;
	UPROPERTY()												float							MaxRotation;				//var float MaxRotation;
	UPROPERTY()												TArray<float>					MovementAnimRate;			//var float MovementAnimRate[4];
	UPROPERTY()												int32							iTraceDistance;				//var int32 iTraceDistance;
	UPROPERTY()												int32							iShortTraceDistance;		//var int32 iShortTraceDistance;
	UPROPERTY()												float							PawnCollisionHeight;		//var float PawnCollisionHeight;
	UPROPERTY()												float							PawnPrePivotZ;				//var float PawnPrePivotZ;
	UPROPERTY()												int32							VirtualHealth;				//var int32 VirtualHealth;
	UPROPERTY()												int32							BleedHealth;				//var int32 BleedHealth;
	UPROPERTY()												int32							BleedMax;					//var int32 BleedMax;
	UPROPERTY()												bool							bForcedWeaponChange;		//var bool bForcedWeaponChange;
	UPROPERTY()												FRotator						FloorRotation;				//var const Rotator FloorRotation;
	UPROPERTY()												UMaterialInstance*				FloorMaterial;				//var const UMaterialInstance* FloorMaterial;
	UPROPERTY()												FRotator						FrontFloorRotation;			//var const Rotator FrontFloorRotation;
	UPROPERTY()												FRotator						BackFloorRotation;			//var const Rotator BackFloorRotation;
	UPROPERTY()												int32							ResolutionSwap;				//var int32 ResolutionSwap;
	UPROPERTY()												FName							commosignalanim;			//var FName commosignalanim;
	UPROPERTY()												bool							boneAnimDirection;			//var bool boneAnimDirection;
	UPROPERTY()												bool							boneAnimComplete;			//var bool boneAnimComplete;
	UPROPERTY()												FName							boneAnimName;				//var FName boneAnimName;
	UPROPERTY()												int32							boneAnimFrame;				//var int32 boneAnimFrame;
	UPROPERTY()												float							CrouchEyeHeight;			//var float CrouchEyeHeight;
	UPROPERTY()												float							ProneEyeHeight;				//var float ProneEyeHeight;
	UPROPERTY()												float							ExtendedRadius;				//var float ExtendedRadius;
	UPROPERTY()												float							ExtendedHeightScalar;		//var float ExtendedHeightScalar;
	UPROPERTY()												FVector							AnimCamRelativeLocation;	//var Vector AnimCamRelativeLocation;
	UPROPERTY()												FRotator						AnimCamRelativeRotation;	//var Rotator AnimCamRelativeRotation;
	UPROPERTY()												float							UnproneTime;				//var const float UnproneTime;
	UPROPERTY()												float							ProneHeight;				//var float ProneHeight;
	UPROPERTY()												float							ProneRadius;				//var float ProneRadius;
	UPROPERTY()												bool							bWasProne;					//var bool bWasProne;
	UPROPERTY()												bool							bInProneTransition;			//var bool bInProneTransition;
	UPROPERTY()												bool							bWantsToProne;				//var bool bWantsToProne;
	UPROPERTY(EditAnywhere, Replicated)						bool							bIsProne;					//var bool bIsProne;
	UPROPERTY()												bool							bIsHipShooting;				//var bool bIsHipShooting;
	UPROPERTY()												bool							bIsFiringBlindlyLeft;		//var bool bIsFiringBlindlyLeft;
	UPROPERTY()												bool							bIsFiringBlindlyRight;		//var bool bIsFiringBlindlyRight;
	UPROPERTY()												bool							bIsFiringBlindlyOverHead;	//var bool bIsFiringBlindlyOverHead;
	UPROPERTY()												bool							bTryToUnprone;				//var const bool bTryToUnprone;
	UPROPERTY(EditAnywhere)									bool							bCanProne;					//var() bool bCanProne;
	UPROPERTY()												bool							bFrontGrounded;				//var const bool bFrontGrounded;
	UPROPERTY()												bool							bBackGrounded;				//var const bool bBackGrounded;
	UPROPERTY()												bool							bWantsToRollRight;			//var bool bWantsToRollRight;
	UPROPERTY()												bool							bWantsToRollLeft;			//var bool bWantsToRollLeft;
	UPROPERTY()												AAuxCollisionCylinder*			FrontAuxCyl;				//var AAuxCollisionCylinder* FrontAuxCyl;
	UPROPERTY()												AAuxCollisionCylinder*			BackAuxCyl;					//var AAuxCollisionCylinder* BackAuxCyl;
	UPROPERTY()												AAuxCollisionCylinder*			BoneAuxCyl;					//var AAuxCollisionCylinder* BoneAuxCyl;
	UPROPERTY()												bool							bWantsToSprint;				//var bool bWantsToSprint;
	UPROPERTY(Replicated)									bool							bIsSprinting;				//var bool bIsSprinting;
	UPROPERTY()												bool							bWasSprinting;				//var bool bWasSprinting;
	UPROPERTY(EditAnywhere)									bool							bCanSprint;					//var() bool bCanSprint;
	UPROPERTY()												float							fSprintMod;					//var float fSprintMod;
	UPROPERTY()												uint8							LeanDirection;				//var uint8 LeanDirection;
	UPROPERTY()												float							LeanParam;					//var float LeanParam;
	UPROPERTY()												float							LeanSpeed;					//var float LeanSpeed;
	UPROPERTY()												FVector							LeanOffsetRight;			//var Vector LeanOffsetRight;
	UPROPERTY()												FVector							LeanOffsetLeft;				//var Vector LeanOffsetLeft;
	UPROPERTY()												int32							LeanRollView;				//var int32 LeanRollView;
	UPROPERTY()												float							fZoomTime;					//var float fZoomTime;
	UPROPERTY()												float							fZoomCycle;					//var float fZoomCycle;
	UPROPERTY()												FRotator						rDeviation;					//var Rotator rDeviation;
	UPROPERTY()												float							fDeviateCycle;				//var float fDeviateCycle;
	UPROPERTY()												float							fDeviateTime;				//var float fDeviateTime;
	UPROPERTY()												USoundBase*						BreathInSound;				//var USoundBase* BreathInSound;
	UPROPERTY()												USoundBase*						BreathOutSound;				//var USoundBase* BreathOutSound;
	UPROPERTY()												float							fWalkSpeed;					//var float fWalkSpeed;
	UPROPERTY()												float							fWalkRearPct;				//var float fWalkRearPct;
	UPROPERTY()												float							fRunSpeed;					//var float fRunSpeed;
	UPROPERTY()												float							fRunSidePct;				//var float fRunSidePct;
	UPROPERTY()												float							fCrouchSpeed;				//var float fCrouchSpeed;
	UPROPERTY()												float							fFastCrouchSpeed;			//var float fFastCrouchSpeed;
	UPROPERTY()												float							fHCrawlSpeed;				//var float fHCrawlSpeed;
	UPROPERTY()												float							fLCrawlSpeed;				//var float fLCrawlSpeed;
	UPROPERTY()												float							SpeedRatio;					//var float SpeedRatio;
	UPROPERTY()												float							SpeedRatio_Always;			//var float SpeedRatio_Always;
	UPROPERTY()												float							CrawlTimer;					//var float CrawlTimer;
	UPROPERTY()												float							fParaTurnScale;				//var float fParaTurnScale;
	UPROPERTY()												float							fParaAccelRate;				//var float fParaAccelRate;
	UPROPERTY()												FRotator						rParaStrafeRot;				//var Rotator rParaStrafeRot;
	UPROPERTY()												float							fParaDampening;				//var float fParaDampening;
	UPROPERTY()												float							fFlareDampening;			//var float fFlareDampening;
	UPROPERTY()												float							fRollTime;					//var float fRollTime;
	UPROPERTY()												int32							iRollDirection;				//var int32 iRollDirection;
	UPROPERTY()												FVector							ForceVelocity;				//var Vector ForceVelocity;
	UPROPERTY()												AActor*							ForceActor;					//var AActor* ForceActor;
	UPROPERTY()												float							fSpeed;						//var float fSpeed;
	UPROPERTY()												float							fStrength;					//var float fStrength;
	UPROPERTY()												float							fAgility;					//var float fAgility;
	UPROPERTY()												float							fEndurance;					//var float fEndurance;
	UPROPERTY()												float							fIntelligence;				//var float fIntelligence;
	UPROPERTY()												float							fLeadership;				//var float fLeadership;
	UPROPERTY()												float							fObedience;					//var float fObedience;
	UPROPERTY()												float							fLoyalty;					//var float fLoyalty;
	UPROPERTY()												float							fCourage;					//var float fCourage;
	UPROPERTY()												float							fMorale;					//var float fMorale;
	UPROPERTY()												float							fInvWeight;					//var float fInvWeight;
	UPROPERTY()												bool							bFoundTheClient;			//var bool bFoundTheClient;
	UPROPERTY()												bool							bClientFriend;				//var bool bClientFriend;
	UPROPERTY()												bool							bUpdateSkinsAndMeshes;		//var bool bUpdateSkinsAndMeshes;
	UPROPERTY()												bool							bGuerrillaMesh;				//var bool bGuerrillaMesh;
	UPROPERTY()												uint8							JavelinReloadAnimation;		//var uint8 JavelinReloadAnimation;
	UPROPERTY()												TArray<UMaterialInstance*>		FriendlyMaterial;				//var UMaterialInstance* FriendlyMaterial[5];
	UPROPERTY()												TArray<UMaterialInstance*>		EnemyMaterial;					//var UMaterialInstance* EnemyMaterial[5];
	UPROPERTY()												USkeletalMesh*					FriendlyMesh;					//var Mesh* FriendlyMesh;
	UPROPERTY()												USkeletalMesh*					EnemyMesh;						//var Mesh* EnemyMesh;
	UPROPERTY()												bool							bMidJump;						//var bool bMidJump;
	UPROPERTY(EditAnywhere, Category = "Civillian_Manager")	FName							GroupTag;						//var(Civillian_Manager) FName GroupTag;
	UPROPERTY()												float							CE_RecoveryPenalty;				//var float CE_RecoveryPenalty;
	UPROPERTY()												float							CE_DesiredValue;				//var float CE_DesiredValue;
	UPROPERTY()												float							CE_MaxMeterValue;				//var float CE_MaxMeterValue;
	UPROPERTY()												float							CE_MeterValue;					//var float CE_MeterValue;
	UPROPERTY()												float							MovementAnimFrame;				//var float MovementAnimFrame;
	UPROPERTY()												TArray<float>					MovementBlendAlpha;				//var float MovementBlendAlpha[4];
	UPROPERTY()												FRotator						rRotationLimits;				//var Rotator rRotationLimits;
	UPROPERTY()												FRotator						rBaseRotation;					//var Rotator rBaseRotation;
	UPROPERTY()												bool							bLockMovement;					//var bool bLockMovement;
	UPROPERTY()												bool							bLimitRotation;					//var bool bLimitRotation;
	UPROPERTY()												bool							bNetAlreadyDead;				//var bool bNetAlreadyDead;
	UPROPERTY()												bool							bTransitionAnim;				//var bool bTransitionAnim;
	UPROPERTY()												bool							bIsDead;						//var bool bIsDead;
	UPROPERTY()												bool							bDecoupleCamera;				//var bool bDecoupleCamera;
	UPROPERTY()												bool							bUsingObjective;				//var bool bUsingObjective;
	UPROPERTY()												int32							AnimPitch;						//var int32 AnimPitch;
	UPROPERTY()												FRotator						rotTorsoFire;					//var Rotator rotTorsoFire;
	UPROPERTY()												float							fMaxGrabHeight;					//var float fMaxGrabHeight;
	UPROPERTY()												float							fGrabBufferDist;				//var float fGrabBufferDist;
	UPROPERTY()												float							fMantleSpeed;					//var float fMantleSpeed;
	UPROPERTY()												float							fFallDamageSpd;					//var float fFallDamageSpd;
	UPROPERTY()												FVector							vMantlePoint;					//var Vector vMantlePoint;
	UPROPERTY()												int32							iMantleEndPosture;				//var int32 iMantleEndPosture;
	UPROPERTY()												AInvContainer*					_InvTop;						//var AInvContainer* _InvTop;
	UPROPERTY()												AInvContainer*					_InvHands;						//var AInvContainer* _InvHands;
	UPROPERTY()												AInvContainer*					_InvShoulder;					//var AInvContainer* _InvShoulder;
	UPROPERTY()												AInvContainer*					_InvHolster;					//var AInvContainer* _InvHolster;
	UPROPERTY()												AInvContainer*					_InvUtility;					//var AInvContainer* _InvUtility;
	UPROPERTY()												AInvContainer*					_InvHip;						//var AInvContainer* _InvHip;
	UPROPERTY()												AInvContainer*					_InvAltShoulder;				//var AInvContainer* _InvAltShoulder;
	UPROPERTY()												TArray<uint8>					_InvGrenades;					//var uint8 _InvGrenades[7];
	UPROPERTY()												uint8							_InvBinoculars;					//var uint8 _InvBinoculars;
	UPROPERTY()												uint8							_InvMedPacks;					//var uint8 _InvMedPacks;
	UPROPERTY()												uint8							_InvSelfHealMedPacks;			//var uint8 _InvSelfHealMedPacks;
	UPROPERTY()												TArray<AInventoryAttachment*>	AttachmentList;					//var TArray<InventoryAttachment> AttachmentList;
	UPROPERTY()												TArray<AItemAttachment*>		IA;								//var TArray<ItemAttachment> IA;
	UPROPERTY(EditAnywhere)									FVector							ShadowDirection;				//var() Vector ShadowDirection;
	UPROPERTY(EditAnywhere)									uint8							ShadowDarkness;					//var() uint8 ShadowDarkness;
	UPROPERTY(EditAnywhere)									bool							bDisableShadow;					//var() bool bDisableShadow;
	UPROPERTY()												AShadowProjector*				PawnShadow;						//var AShadowProjector* PawnShadow;
	UPROPERTY()												bool							bPawnZoomed;					//var bool bPawnZoomed;
	UPROPERTY()												bool							bHidePawn;						//var bool bHidePawn;
	UPROPERTY()												bool							bCleanUp;						//var bool bCleanUp;
	UPROPERTY(EditAnywhere, Category = "NPCController")		bool							bNPCDisableSkinSwapping;		//var(NPCController) bool bNPCDisableSkinSwapping;
	UPROPERTY()												TArray<AActor*>					HiddenAttachmentClasses;		//var class<Actor> HiddenAttachmentClasses[24];
	UPROPERTY()												TArray<AActor*>					HiddenAttachments;				//var TArray<Actor> HiddenAttachments;
	UPROPERTY()												bool							bNeedUpdateHiddenAttachments;	//var bool bNeedUpdateHiddenAttachments;
	UPROPERTY()												bool							InVal;
	UPROPERTY()												USkeletalMesh*					Mesh;
	UPROPERTY(EditAnywhere, Category = "Collision")			uint8							ValidJavelinTarget;			//var(Collision) byte ValidJavelinTarget;
	UPROPERTY()												bool							HebAbortMoveIfGoalOccupiedalth;	//var bool bAbortMoveIfGoalOccupied;
	UPROPERTY()												USceneComponent*				Root;
	UPROPERTY()												TArray<UMaterialInstance*>		Skins;
	UPROPERTY()												AEventlab*						EventLab;					//var Actor EventLab;
	UPROPERTY(EditAnywhere, Category = "Movement")			FVector							Velocity;					//var(Movement) FVector Velocity;
	UPROPERTY(EditAnywhere, Category = "Karma")				UKarmaParamsCollision*			KParams;					//var(Karma) KarmaParamsCollision KParams;

	UPROPERTY(EditAnywhere, Replicated)						USkeletalMeshComponent*			Mesh_3P;
	UPROPERTY(EditAnywhere, Replicated)						UAnimationAsset*				Anim_1P;
	UPROPERTY(EditAnywhere, Replicated)						UAnimationAsset*				Anim_3P;
	UPROPERTY(EditAnywhere)									FVector							PrePivot;
protected:
	
	virtual void BeginPlay() override;

public:	
	
	virtual void Tick(float DeltaTime) override;

	// Called to bind functionality to input
	virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;
	void GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const;
	void LoadMesh();
};
